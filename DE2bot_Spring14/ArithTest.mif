-- Altera Memory Initialization File (MIF)

DEPTH = 1024;
WIDTH = 16;

ADDRESS_RADIX = HEX;
DATA_RADIX = HEX;

CONTENT
  BEGIN
    [000..3FF] : 0000;  -- Default to NOP

           000 : 046F;  -- 	LOAD    Zero
           001 : 4C83;  -- 	OUT     LVELCMD     ; Stop motors
           002 : 4C8B;  -- 	OUT     RVELCMD
           003 : 4057;  -- 	CALL    SetupI2C    ; Configure the I2C
           004 : 4040;  -- 	CALL    BattCheck   ; Get battery voltage (and end if too low).
           005 : 4C05;  -- 	OUT     SSEG2       ; Display batt voltage on SS
           006 : 046F;  -- 	LOAD    Zero
           007 : 3417;  -- 	ADDI    &H17        ; arbitrary reminder to toggle SW17
           008 : 4C04;  -- 	OUT     SSEG1
           009 : 4803;  -- 	IN      XIO         ; contains KEYs and SAFETY
           00A : 2486;  -- 	AND     StartMask   ; mask with 0x10100 : KEY3 and SAFETY
           00B : 2C82;  -- 	XOR     Mask4       ; KEY3 is active low; invert SAFETY to match
           00C : 1C09;  -- 	JPOS    WaitForUser ; one of those is not ready, so try again
           00D : 046F;  -- 	LOAD	Zero
           00E : 3500;  -- 	ADDI	256
           00F : 4C06;  -- 	OUT		LCD
           010 : 4020;  -- 	CALL	Wait1
           011 : 4020;  -- 	CALL	Wait1
           012 : 4020;  -- 	CALL	Wait1
           013 : 5000;  -- 	SQRT
           014 : 4C06;  -- 	OUT		LCD
           015 : 4020;  -- 	CALL	Wait1
           016 : 4020;  -- 	CALL	Wait1
           017 : 4020;  -- 	CALL	Wait1
           018 : 0472;  -- 	LOAD	Three
           019 : 4C06;  -- 	OUT		LCD
           01A : 4020;  -- 	CALL	Wait1
           01B : 4020;  -- 	CALL	Wait1
           01C : 4020;  -- 	CALL	Wait1
           01D : 5471;  -- 	MULT	Two
           01E : 4C06;  -- 	OUT		LCD
           01F : 141F;  -- Here: JUMP Here
           020 : 4C02;  -- 	OUT     TIMER
           021 : 4802;  -- 	IN      TIMER
           022 : 4C01;  -- 	OUT     LEDS
           023 : 37F6;  -- 	ADDI    -10
           024 : 1821;  -- 	JNEG    Wloop
           025 : 4400;  -- 	RETURN
           026 : 0469;  -- 	LOAD	JobCount
           027 : 4C98;  -- 		OUT		UART
           028 : 3401;  -- 		ADDI	1
           029 : 0869;  -- 		STORE	JobCount
           02A : 37D8;  -- 		ADDI	-40
           02B : 1827;  -- 		JNEG	JobAskLoop
           02C : 046F;  -- 	LOAD	Zero
           02D : 086E;  -- 	STORE	Iterator
           02E : 348E;  -- 	ADDI	Job0
           02F : 0869;  -- 	STORE	JobCount
           030 : 403D;  -- 		CALL	WaitForUART
           031 : 4898;  -- 		IN		UART
           032 : 3C69;  -- 		ISTORE	JobCount
           033 : 3402;  -- 		ADDI	2
           034 : 0869;  -- 		STORE	JobCount
           035 : 046E;  -- 		LOAD	Iterator
           036 : 3401;  -- 		ADDI	1
           037 : 086E;  -- 		STORE	Iterator
           038 : 37F8;  -- 		ADDI	-8
           039 : 1830;  -- 		JNEG	JobRetreiveLoop
           03A : 4400;  -- 	RETURN
           03B : 046F;  -- 	LOAD	Zero
           03C : 086E;  -- 	STORE	Iterator	; reset iterator
           03D : 4899;  -- 	IN UART_CHK
           03E : 203D;  -- 	JZERO	WaitForUART
           03F : 4400;  -- 	RETURN
           040 : 405E;  -- 	CALL    GetBattLvl 
           041 : 108B;  -- 	SUB     MinBatt
           042 : 1845;  -- 	JNEG    DeadBatt
           043 : 0C8B;  -- 	ADD     MinBatt     ; get original value back
           044 : 4400;  -- 	RETURN
           045 : 0473;  -- 	LOAD    Four
           046 : 4C0A;  -- 	OUT     BEEP        ; start beep sound
           047 : 405E;  -- 	CALL    GetBattLvl  ; get the battery level
           048 : 4C04;  -- 	OUT     SSEG1       ; display it everywhere
           049 : 4C05;  -- 	OUT     SSEG2
           04A : 4C06;  -- 	OUT     LCD
           04B : 046F;  -- 	LOAD    Zero
           04C : 37FF;  -- 	ADDI    -1          ; 0xFFFF
           04D : 4C01;  -- 	OUT     LEDS        ; all LEDs on
           04E : 4C07;  -- 	OUT     GLEDS
           04F : 4020;  -- 	CALL    Wait1       ; 1 second
           050 : 046F;  -- 	Load    Zero
           051 : 4C0A;  -- 	OUT     BEEP        ; stop beeping
           052 : 046F;  -- 	LOAD    Zero
           053 : 4C01;  -- 	OUT     LEDS        ; LEDs off
           054 : 4C07;  -- 	OUT     GLEDS
           055 : 4020;  -- 	CALL    Wait1       ; 1 second
           056 : 1445;  -- 	JUMP    DeadBatt    ; repeat forever
           057 : 048C;  -- 	LOAD    I2CWCmd     ; 0x1190 (write 1B, read 1B, addr 0x90)
           058 : 4C90;  -- 	OUT     I2C_CMD     ; to I2C_CMD register
           059 : 046F;  -- 	LOAD    Zero        ; 0x0000 (A/D port 0, no increment)
           05A : 4C91;  -- 	OUT     I2C_DATA    ; to I2C_DATA register
           05B : 4C92;  -- 	OUT     I2C_RDY     ; start the communication
           05C : 4064;  -- 	CALL    BlockI2C    ; wait for it to finish
           05D : 4400;  -- 	RETURN
           05E : 048D;  -- 	LOAD    I2CRCmd     ; 0x0190 (write 0B, read 1B, addr 0x90)
           05F : 4C90;  -- 	OUT     I2C_CMD     ; to I2C_CMD
           060 : 4C92;  -- 	OUT     I2C_RDY     ; start the communication
           061 : 4064;  -- 	CALL    BlockI2C    ; wait for it to finish
           062 : 4891;  -- 	IN      I2C_DATA    ; get the returned data
           063 : 4400;  -- 	RETURN
           064 : 4892;  -- 	IN      I2C_RDY;   ; Read busy signal
           065 : 1C64;  -- 	JPOS    BlockI2C    ; If not 0, try again
           066 : 4400;  -- 	RETURN              ; Else return
           067 : 0000;  -- Temp:     DW 0 ; "Temp" is not a great name, but can be helpful
           068 : 0000;  -- JobsCompleted: DW	0 ; Number of jobs that have  been completed
           069 : 0021;  -- JobCount: DW &H21 ; Variable used for getting jobs
           06A : 0000;  -- NextX_R:  DW &H0000 ; Target X Position in grid space
           06B : 0000;  -- NextX_A:  DW &H0000 ; Target X position in absolute location (measured/odometry)
           06C : 0000;  -- NextY_R:  DW &H0000 ; Target Y Position in grid space
           06D : 0000;  -- NextY_A:  DW &H0000 ; Target Y position in absolute location (measured/odometry)
           06E : 0000;  -- Iterator: DW &H0000 ; Used for loops as counter
           06F : 0000;  -- Zero:     DW 0
           070 : 0001;  -- One:      DW 1
           071 : 0002;  -- Two:      DW 2
           072 : 0003;  -- Three:    DW 3
           073 : 0004;  -- Four:     DW 4
           074 : 0005;  -- Five:     DW 5
           075 : 0006;  -- Six:      DW 6
           076 : 0007;  -- Seven:    DW 7
           077 : 0008;  -- Eight:    DW 8
           078 : 0009;  -- Nine:     DW 9
           079 : 000A;  -- Ten:      DW 10
           07A : 0064;  -- FSlow:    DW 100       ; 100 is about the lowest value that will move at all
           07B : FF9C;  -- RSlow:    DW -100
           07C : 01F4;  -- FFast:    DW 500       ; 500 is a fair clip (511 is max)
           07D : FE0C;  -- RFast:    DW -500
           07E : 0001;  -- Mask0:    DW &B00000001
           07F : 0002;  -- Mask1:    DW &B00000010
           080 : 0004;  -- Mask2:    DW &B00000100
           081 : 0008;  -- Mask3:    DW &B00001000
           082 : 0010;  -- Mask4:    DW &B00010000
           083 : 0020;  -- Mask5:    DW &B00100000
           084 : 0040;  -- Mask6:    DW &B01000000
           085 : 0080;  -- Mask7:    DW &B10000000
           086 : 0014;  -- StartMask: DW &B10100
           087 : 00FF;  -- AllSonar: DW &B11111111
           088 : 01DC;  -- OneMeter: DW 476        ; one meter in 2.1mm units
           089 : 00EE;  -- HalfMeter: DW 238       ; half meter in 2.1mm units
           08A : 0122;  -- TwoFeet:  DW 290        ; ~2ft in 2.1mm units
           08B : 006E;  -- MinBatt:  DW 110        ; 11V - minimum safe battery voltage
           08C : 1190;  -- I2CWCmd:  DW &H1190     ; write one byte, read one byte, addr 0x90
           08D : 0190;  -- I2CRCmd:  DW &H0190     ; write nothing, read one byte, addr 0x90
           08E : 0000;  -- Job0:	  DW &H0000
           08F : 0000;  -- Job1:	  DW &H0000
           090 : 0000;  -- Job2:	  DW &H0000
           091 : 0000;  -- Job3:	  DW &H0000
           092 : 0000;  -- Job4:	  DW &H0000
           093 : 0000;  -- Job5:	  DW &H0000
           094 : 0000;  -- Job6:	  DW &H0000
           095 : 0000;  -- Job7:	  DW &H0000
  END;
